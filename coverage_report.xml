<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<style>body{background-color:white;}</style>
<link href="lib/htmltools-fill-0.5.8.1/fill.css" rel="stylesheet" />
<script src="lib/htmlwidgets-1.6.4/htmlwidgets.js"></script>
<link href="lib/datatables-css-0.0.0/datatables-crosstalk.css" rel="stylesheet" />
<script src="lib/datatables-binding-0.33/datatables.js"></script>
<script src="lib/jquery-3.6.0/jquery-3.6.0.min.js"></script>
<link href="lib/dt-core-1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="lib/dt-core-1.13.6/css/jquery.dataTables.extra.css" rel="stylesheet" />
<script src="lib/dt-core-1.13.6/js/jquery.dataTables.min.js"></script>
<link href="lib/crosstalk-1.2.1/css/crosstalk.min.css" rel="stylesheet" />
<script src="lib/crosstalk-1.2.1/js/crosstalk.min.js"></script>
<link href="lib/highlight.js-6.2/rstudio.css" rel="stylesheet" />
<script src="lib/highlight.js-6.2/highlight.pack.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link href="lib/bootstrap-3.3.5/css/bootstrap.min.css" rel="stylesheet" />
<link href="lib/bootstrap-3.3.5/css/bootstrap-theme.min.css" rel="stylesheet" />
<script src="lib/bootstrap-3.3.5/js/bootstrap.min.js"></script>
<script src="lib/bootstrap-3.3.5/shim/html5shiv.min.js"></script>
<script src="lib/bootstrap-3.3.5/shim/respond.min.js"></script>

</head>
<body>
<div class="container-fluid">
  <style type="text/css">table tr:hover td {
  font-weight:bold;text-decoration:none
}
table tr.covered td{
  background-color:rgba(95,151,68,0.3)
}

table tr:hover.covered .num{
  background-color:rgba(95,151,68,0.7)
}
table tr.missed td{
  background-color:rgba(185,73,71,0.3)
}
table tr:hover.missed .num{
  background-color:rgba(185,73,71,0.7)
}

table tr.missed:hover td{
  -webkit-box-shadow:0 -2px 0 0 #b94947 inset;
  -moz-box-shadow:0 -2px 0 0 #b94947 inset;
  box-shadow:0 -2px 0 0 #b94947 inset
}
table tr.covered:hover td{
  -webkit-box-shadow:0 -2px 0 0 #5f9744 inset;
  -moz-box-shadow:0 -2px 0 0 #5f9744 inset;
  box-shadow:0 -2px 0 0 #5f9744 inset
}

table tr.never td{
  background-color:transparent
}

table tbody {
  border-style: solid;
  border: 1px solid rgba(0,0,0,0.1)
}

table .num {
  border-right: 1px solid rgba(0,0,0,0.1)
}

td.coverage em {
  opacity: 0.5;
}

table td.coverage {
  border-right: 1px solid rgba(0,0,0,0.1);
  font-weight: bold;
  text-align: center;
}
table.table-condensed pre {
  background-color: transparent;
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 11px;
}
div#files td {
  padding: 0;
  padding-left: 5px;
}

div#files td.num {
  padding-right: 5px;
}

table.table-condensed {
  font-size: 11px;
}</style>
  <div class="col-md-8 col-md-offset-2">
    <h2> coverage - 75.84%</h2>
    <div class="tabbable">
      <ul class="nav nav-tabs" data-tabsetid="covr">
        <li class="active">
          <a href="#tab-covr-1" data-toggle="tab" data-value="Files">Files</a>
        </li>
        <li>
          <a href="#tab-covr-2" data-toggle="tab" data-value="Source">Source</a>
        </li>
      </ul>
      <div class="tab-content" data-tabsetid="covr">
        <div class="tab-pane active" title="Files" data-value="Files" id="tab-covr-1">
          <div class="datatables html-widget html-fill-item" id="htmlwidget-3ded7d8a3cf1a7a10fed" style="width:100%;height:500px;"></div>
          <script type="application/json" data-for="htmlwidget-3ded7d8a3cf1a7a10fed">{"x":{"filter":"none","vertical":false,"fillContainer":false,"data":[["<a href=\"#\">.//src/functions.R<\/a>","<a href=\"#\">.//src/provider/Analysis.R<\/a>","<a href=\"#\">.//src/provider/Benchmark.R<\/a>","<a href=\"#\">.//src/model/UserInfo.R<\/a>","<a href=\"#\">.//src/model/exception/SystemException.R<\/a>","<a href=\"#\">.//src/provider/TableReader.R<\/a>"],[61,132,25,28,17,9],[33,65,15,14,9,6],[0,62,15,14,9,6],[33,3,0,0,0,0],["0","8","2","27","7","12"],["0.00%","95.38%","100.00%","100.00%","100.00%","100.00%"]],"container":"<table class=\"row-border\">\n  <thead>\n    <tr>\n      <th>File<\/th>\n      <th>Lines<\/th>\n      <th>Relevant<\/th>\n      <th>Covered<\/th>\n      <th>Missed<\/th>\n      <th>Hits / Line<\/th>\n      <th>Coverage<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"searching":false,"dom":"t","paging":false,"columnDefs":[{"targets":6,"createdCell":"function(td, cellData, rowData, row, col) {\n  var percent = cellData.replace(\"%\", \"\");\n  if (percent > 90) {\n    var grad = \"linear-gradient(90deg, #edfde7 \" + cellData + \", white \" + cellData + \")\";\n  } else if (percent > 75) {\n    var grad = \"linear-gradient(90deg, #f9ffe5 \" + cellData + \", white \" + cellData + \")\";\n  } else {\n    var grad = \"linear-gradient(90deg, #fcece9 \" + cellData + \", white \" + cellData + \")\";\n  }\n  $(td).css(\"background\", grad);\n}\n"},{"className":"dt-right","targets":[1,2,3,4]},{"name":"File","targets":0},{"name":"Lines","targets":1},{"name":"Relevant","targets":2},{"name":"Covered","targets":3},{"name":"Missed","targets":4},{"name":"Hits / Line","targets":5},{"name":"Coverage","targets":6}],"order":[],"autoWidth":false,"orderClasses":false},"callback":"function(table) {\ntable.on('click.dt', 'a', function() {\n  files = $('div#files div');\n  files.not('div.hidden').addClass('hidden');\n  id = $(this).text();\n  files.filter('div[id=\\'' + id + '\\']').removeClass('hidden');\n  $('ul.nav a[data-value=Source]').text(id).tab('show');\n});\n}"},"evals":["options.columnDefs.0.createdCell","callback"],"jsHooks":[]}</script>
        </div>
        <div class="tab-pane" title="Source" data-value="Source" id="tab-covr-2">
          <div id="files">
            <div id=".//src/provider/Analysis.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">private.tableValidation = function(table) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">3</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  response = NA</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">4</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(!is.data.frame(table) || nrow(table) == 0)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">5</td>
                    <td class="coverage">8<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = invalidParameterException("'table' vazia ou com tipo invalido tabela")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">7</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">summaryAnalysis = function(table) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">13</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  validation = private.tableValidation(table)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">14</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(class(validation) == "invalidParameterException")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">15</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(validation)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">17</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  result = summary(table$credit)[c(1,4,6)]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">18</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">mergeSortAnalysis = function(table) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">24</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  validation = private.tableValidation(table)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">25</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(class(validation) == "invalidParameterException")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">26</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(validation)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">28</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  private.mergeSort = function(dt.subset) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Limite da recursividade</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">30</td>
                    <td class="coverage">19<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tamanho = nrow(dt.subset)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">31</td>
                    <td class="coverage">19<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (tamanho &lt;= 1) </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">32</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        return(dt.subset)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Obtendo posicao central</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">35</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    meio = mean(tamanho / 2) |&gt; floor()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Separando vetores</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">38</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    vetorEsquerda = dt.subset[0 : meio]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">39</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    vetorDireita = dt.subset[(meio + 1) : tamanho]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Aplicando recursividade</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">42</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    esquerda = private.mergeSort(vetorEsquerda)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">43</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    direita = private.mergeSort(vetorDireita)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Unificando vetores da esquerda, meio e direita</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">46</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = private.merge(esquerda, direita)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">47</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">50</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  private.merge = function(esquerda, direita) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Iniciando vetor vazio</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">52</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">53</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Unificando os vetores da esquerda e da direita</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">55</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    while (nrow(esquerda) &gt; 0 &amp;&amp; nrow(direita) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        # Verificando comparacao</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">58</td>
                    <td class="coverage">19<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if (esquerda[1]$credit &gt; direita[1]$credit) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            # Aplicando esquerda</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">60</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            response = rbind(response, esquerda[1])</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">61</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            esquerda = esquerda[-1]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">62</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            # Aplicando direita</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">64</td>
                    <td class="coverage">19<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            response = rbind(response, direita[1])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">65</td>
                    <td class="coverage">19<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            direita = direita[-1]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">68</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">69</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Obtendo vetores de resposta</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">70</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    vetorEsquerda = NULL</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">71</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if(nrow(esquerda) &gt; 0)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">72</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      vetorEsquerda = rbind(response, esquerda)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">73</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    vetorDireita = NULL</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">75</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if(nrow(direita) &gt; 0)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">76</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      vetorDireita = rbind(response, direita)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">77</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">78</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Retornando resposta</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">79</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = rbind(vetorEsquerda, vetorDireita)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">81</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">83</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  response = private.mergeSort(table)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">84</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">86</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">87</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">88</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">89</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">languageSortAnalysis = function(table) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">90</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  validation = private.tableValidation(table)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">91</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(class(validation) == "invalidParameterException")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">92</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(validation)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">93</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">94</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  result = table[order(-credit),]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">95</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">96</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">97</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">98</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">99</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">100</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">quickSortAnalysis = function(table) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">101</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  validation = private.tableValidation(table)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">102</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(class(validation) == "invalidParameterException")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">103</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(validation)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">104</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">105</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  private.quickSort = function(dt.subset) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">106</td>
                    <td class="coverage">26<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tamanho = dim(dt.subset)[1]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">107</td>
                    <td class="coverage">26<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (tamanho &lt;= 1)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">108</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        return(dt.subset)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">109</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">110</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Obtendo posicao central</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">111</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    meio = mean(tamanho / 2) |&gt; floor()</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">112</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    pivot = dt.subset[meio]$credit</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">113</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">114</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Separando vetores</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">115</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    menores = dt.subset[credit &lt; pivot]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">116</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    iguais = dt.subset[credit == pivot]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">117</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    maiores = dt.subset[credit &gt; pivot]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">119</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Obtendo vetores</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">120</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    arrayMenores = private.quickSort(menores)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">121</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    arrayMaiores = private.quickSort(maiores)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">123</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Retornando vetor</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">124</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    l = list(arrayMaiores, iguais, arrayMenores)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">125</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = rbindlist(l)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">126</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">127</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">128</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">129</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  response = private.quickSort(table)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">130</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">131</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">132</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#==============================================</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id=".//src/provider/Benchmark.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#===================================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">benchmark = function(table, code, format = 1000) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">3</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(!is.function(code))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">4</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(benchmarkException("Parametro 'code' invalido"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">6</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(!is.numeric(format) || format &lt;= 0)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">7</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(benchmarkException("Parametro 'format' invalido"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Obtendo o tempo inicial em segundos</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">10</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  tempo = system.time({</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">11</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    result = tryCatch({</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">12</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      code(table)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">13</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }, error = function(e) return(benchmarkException("Parametro 'code' nao possui compatibilidade com 'table'")))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">14</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })[3]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">16</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(sum(class(result) == "benchmarkException") &gt; 0)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">17</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">19</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  tempo = round(tempo * format, digits = 2)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">20</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  names(tempo) = NULL </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">22</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  r = list(time = tempo, value = result)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">23</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(r)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#===================================================</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id=".//src/functions.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#===================================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># Método para captura e tratamento dos parametros obtidos via console</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># @param codes Lista de parametros obtidos via console</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># @return Tamanho de usuários á serem gerados</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">convertArgs = function(args) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">7</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(length(args) != 1) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">8</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat("Parametros inválidos.\n")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">9</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    quit(status = -1, save = "no")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">12</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  line = args[1]</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">13</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(line)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#===================================================</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># Definindo função para realizar o experimento</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">start = function(args) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">19</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  configName = convertArgs(args)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">20</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  configJson = fromJSON(configName, simplifyVector = FALSE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">22</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  INPUT = configJson$INPUT_FILENAME_LIST</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">23</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  INPUT = do.call(c, INPUT)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">25</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  OUTPUT = configJson$OUTPUT_FILENAME</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">27</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  timeMap = list()</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">28</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for(index in 1:length(INPUT)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">29</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat(sprintf("[START] Arquivo: %s\n", index))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">31</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    fileName = INPUT[index]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">33</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat("\t[LOG] Read\n")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">34</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dataReader = benchmark(fileName, fread)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">35</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dataInput = dataReader$value</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">37</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat("\t[LOG] Summary\n")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">38</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    summaryResult = dataInput |&gt; benchmark(summaryAnalysis)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">40</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat("\t[LOG] Merge\n")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">41</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    mergeSortResult = dataInput |&gt; benchmark(mergeSortAnalysis)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">43</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat("\t[LOG] Language\n")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">44</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    languageSortResult = dataInput |&gt; benchmark(languageSortAnalysis)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">46</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat("\t[LOG] Quick\n")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">47</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    quickSortResult = dataInput |&gt; benchmark(quickSortAnalysis)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">49</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    timeMap[[sprintf("Read@%s", index)]] = dataReader$time</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">50</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    timeMap[[sprintf("SummaryAnalysis@%s", index)]] = summaryResult$time</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">51</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    timeMap[[sprintf("MergeAnalysis@%s", index)]] = mergeSortResult$time</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">52</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    timeMap[[sprintf("LanguageAnalysis@%s", index)]] = languageSortResult$time</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">53</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    timeMap[[sprintf("QuickAnalysis@%s", index)]] = quickSortResult$time</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">55</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat(sprintf("[END] Arquivo: %s\n", index))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">58</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  response = toJSON(timeMap, auto_unbox = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">59</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cat(response, file = OUTPUT)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#===================================================</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id=".//src/model/UserInfo.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># Metodo privado para encriptar a senha do usuario</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># @param password Senha a ser encriptada</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># @return Nova senha encriptada</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">private.cryptPassword = function(passwordArray) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">5</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cryptList = strsplit(passwordArray, NULL) |&gt; sapply(function(crypt) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">6</td>
                    <td class="coverage">111<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    size = length(crypt)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">7</td>
                    <td class="coverage">111<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = paste(crypt[size:1], collapse = "")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">8</td>
                    <td class="coverage">111<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">11</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cryptList = sprintf("HASH%s000", cryptList)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">12</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(cryptList)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># Informacoes do usuario</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">userInfo.create = function(userArray, passwordArray, creditArray) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">17</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(!is.character(userArray))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">18</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(invalidParameterException("Parametro 'userArray' invalido"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">20</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(!is.character(passwordArray))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">21</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(invalidParameterException("Parametro 'passwordArray' invalido"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">23</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if(!is.numeric(creditArray))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">24</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(invalidParameterException("Parametro 'creditArray' invalido"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">26</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  response = data.table(user = userArray, password = private.cryptPassword(passwordArray), credit = creditArray)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">27</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id=".//src/model/exception/SystemException.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">benchmarkException = function(ctx) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">2</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = simpleError(ctx)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">3</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    class(response) = "benchmarkException"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">4</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">dataReaderException = function(ctx) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">8</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = simpleError(ctx)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">9</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    class(response) = "dataReaderException"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">10</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">invalidParameterException = function(ctx) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">14</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = simpleError(ctx)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">15</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    class(response) = "invalidParameterException"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">16</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id=".//src/provider/TableReader.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># Classe para gerenciar uma tabela de usuarios</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">tableReader.deserializeFile = function(fileName) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">3</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  tryCatch({</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">4</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response = fread(fileName)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">5</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response$password = private.cryptPassword(response$password)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">6</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    attr(response, "filename") = fileName</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">7</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(response)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">8</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }, error = function(e) dataReaderException("Parametro 'fileName' invalido"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <script>$('div#files pre').each(function(i, block) {
    hljs.highlightBlock(block);
});</script>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
</body>
</html>
